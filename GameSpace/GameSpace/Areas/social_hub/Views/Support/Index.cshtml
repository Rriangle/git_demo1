@{
    ViewData["Title"] = "客服工作台";
    var meId = ViewBag.MeManagerId as int?;
}

<h2 class="mb-3">@ViewData["Title"]</h2>

<div class="alert alert-secondary py-2">
    目前客服 ManagerId：<strong>@(meId?.ToString() ?? "-")</strong>
</div>

<ul class="nav nav-pills mb-3" id="support-tabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="tab-assigned" data-bs-toggle="pill" data-bs-target="#pane-assigned" type="button" role="tab" aria-controls="pane-assigned" aria-selected="true">
            指派給我 <span class="badge bg-light text-dark ms-1" id="count-assigned">—</span>
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="tab-unassigned" data-bs-toggle="pill" data-bs-target="#pane-unassigned" type="button" role="tab" aria-controls="pane-unassigned" aria-selected="false">
            未指派 <span class="badge bg-light text-dark ms-1" id="count-unassigned">—</span>
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="tab-closed" data-bs-toggle="pill" data-bs-target="#pane-closed" type="button" role="tab" aria-controls="pane-closed" aria-selected="false">
            已結單 <span class="badge bg-light text-dark ms-1" id="count-closed">—</span>
        </button>
    </li>
</ul>

<div class="tab-content" id="support-tab-content">
    <!-- Assigned -->
    <div class="tab-pane fade show active" id="pane-assigned" role="tabpanel" aria-labelledby="tab-assigned">
        <div class="text-muted">載入中…</div>
    </div>

    <!-- Unassigned -->
    <div class="tab-pane fade" id="pane-unassigned" role="tabpanel" aria-labelledby="tab-unassigned">
        <div class="text-muted">載入中…</div>
    </div>

    <!-- Closed -->
    <div class="tab-pane fade" id="pane-closed" role="tabpanel" aria-labelledby="tab-closed">
        <div class="text-muted">載入中…</div>
    </div>
</div>

@section Scripts {
    <script>
        async function loadCounts() {
            try {
                const res = await fetch('/social_hub/Support/GetCounts', { credentials: 'same-origin' });
                if (!res.ok) return;
                const d = await res.json();
                document.getElementById('count-assigned').innerText = (d.assigned ?? 0).toString();
                document.getElementById('count-unassigned').innerText = (d.unassigned ?? 0).toString();
                document.getElementById('count-closed').innerText = (d.closed ?? 0).toString();
            } catch (e) {
                console.error('GetCounts failed', e);
            }
        }

        async function renderAssigned(page = 1, q = '') {
            const url = `/social_hub/Support/ListAssigned?page=${page}&q=${encodeURIComponent(q)}`;
            await renderTo('#pane-assigned', url);
        }
        async function renderUnassigned(page = 1, q = '') {
            const url = `/social_hub/Support/ListUnassigned?page=${page}&q=${encodeURIComponent(q)}`;
            await renderTo('#pane-unassigned', url);
        }
        async function renderClosed(page = 1, q = '') {
            const url = `/social_hub/Support/ListClosed?page=${page}&q=${encodeURIComponent(q)}`;
            await renderTo('#pane-closed', url);
        }

        // 共用載入器
        async function renderTo(selector, url) {
            const host = document.querySelector(selector);
            try {
                const res = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }, credentials: 'same-origin' });
                const html = await res.text();
                host.innerHTML = html;
            } catch (e) {
                host.innerHTML = `<div class="alert alert-danger">載入失敗，請重試。</div>`;
                console.error('renderTo failed', e);
            }
        }

        // 分頁事件委派（Assigned）
        document.addEventListener('click', async (e) => {
            const a = e.target.closest('#pane-assigned a.page-link');
            if (!a) return;
            e.preventDefault();
            await renderTo('#pane-assigned', a.getAttribute('href'));
            await loadCounts();
        });
        // 分頁事件委派（Unassigned）
        document.addEventListener('click', async (e) => {
            const a = e.target.closest('#pane-unassigned a.page-link');
            if (!a) return;
            e.preventDefault();
            await renderTo('#pane-unassigned', a.getAttribute('href'));
            await loadCounts();
        });
        // 分頁事件委派（Closed）
        document.addEventListener('click', async (e) => {
            const a = e.target.closest('#pane-closed a.page-link');
            if (!a) return;
            e.preventDefault();
            await renderTo('#pane-closed', a.getAttribute('href'));
            await loadCounts();
        });

        // 切換分頁時載入
        document.getElementById('tab-assigned').addEventListener('shown.bs.tab', () => {
            renderAssigned(1);
            loadCounts();
        });
        document.getElementById('tab-unassigned').addEventListener('shown.bs.tab', () => {
            renderUnassigned(1);
            loadCounts();
        });
        document.getElementById('tab-closed').addEventListener('shown.bs.tab', () => {
            renderClosed(1);
            loadCounts();
        });

        // 首次載入：預設載 Assigned + 徽章
        document.addEventListener('DOMContentLoaded', () => {
            renderAssigned(1);
            loadCounts();
            // 想預先快取其他分頁也可以（可選）：
            // renderUnassigned(1); renderClosed(1);
        });

                // 未指派清單：指派給我
        document.addEventListener('click', async (e) => {
            const btn = e.target.closest('#pane-unassigned .btn-assign-row');
            if (!btn) return;
            e.preventDefault();

            const id = btn.getAttribute('data-id');
            try {
                const res = await fetch(`/social_hub/Support/AssignToMe?id=${id}`, {
                    method: 'POST',
                    credentials: 'same-origin'
                });
                if (!res.ok) {
                    alert(await res.text());
                    return;
                }
                // 重新載入「未指派」與「指派給我」，同步徽章
                await renderUnassigned(1);
                await renderAssigned(1);
                await loadCounts();
            } catch (err) {
                console.error('AssignToMe failed', err);
                alert('指派失敗，請稍後再試。');
            }
        });


    </script>
}
